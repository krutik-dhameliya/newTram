{"version":3,"sources":["./src/app/services/tram.service.ts","./src/environments/environment.ts","./src/assets/stations.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/tram-schedule/tram-schedule.component.ts","./src/app/tram-schedule/tram-schedule.component.html","./src/app/header-formatter.pipe.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TRAM_STATIONS, TramStation } from 'src/assets/stations';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TramService {\n  private dataUrl = 'assets/tram-data.json';\n  private readonly stations: string[] = TRAM_STATIONS.map(station => station.name);\n\n  constructor(private http: HttpClient) {}\n\n  getTramDepartures(): Observable<any> {\n    return this.http.get<any>(this.dataUrl);\n  }\n\n  searchTrams(from: string, to: string): Observable<{ trams: any[]; buses: any[] }> {\n    return this.getTramDepartures().pipe(\n      map(data => {\n        if (!data?.departures) {\n          console.error('Invalid or missing data:', data);\n          return { trams: [], buses: [] };\n        }\n\n        const fromIndex = this.stations.indexOf(from);\n        const toIndex = this.stations.indexOf(to);\n        if (fromIndex === -1 || toIndex === -1) {\n          console.warn('Invalid station names:', { from, to });\n          return { trams: [], buses: [] };\n        }\n\n        const direction = fromIndex < toIndex ? 2 : 1;\n        const departures = data.departures.filter((departure: any) => departure.direction_code === direction);\n        console.log(departures);\n        return {\n          trams: departures.filter((departure: any) => departure.line?.transport_mode === 'TRAM'),\n          buses: departures.filter((departure: any) => departure.line?.transport_mode === 'BUS')\n        };\n      })\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export interface TramStation {\r\n    name: string;\r\n}\r\n\r\nexport const TRAM_STATIONS: TramStation[] = [\r\n    { name: 'Gullmarsplan' },\r\n    { name: 'Globen' },\r\n    { name: 'Linde' },\r\n    { name: 'Valla torg' },\r\n    { name: 'Årstafältet' },\r\n    { name: 'Årstaberg' },\r\n    { name: 'Årstadal' },\r\n    { name: 'Liljeholmen' },\r\n    { name: 'Trekanten' },\r\n    { name: 'Gröndal' },\r\n    { name: 'Stora Essingen' },\r\n    { name: 'Alviks strand' },\r\n    { name: 'Alvik' },\r\n    { name: 'Mårtensdal' },\r\n    { name: 'Luma' },\r\n    { name: 'Sickla kaj' },\r\n    { name: 'Sickla udde' },\r\n    { name: 'Johannesfred' },\r\n    { name: 'Karlsbodavägen' },\r\n    { name: 'Bällsta bro' },\r\n    { name: 'Sundbybergs centrum' },\r\n    { name: 'Solna Business Park' },\r\n    { name: 'Solna centrum' },\r\n    { name: 'Solna station' },\r\n    { name: 'Bromma Blocks' },\r\n    { name: 'Sickla' }\r\n];\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TramScheduleComponent } from './tram-schedule/tram-schedule.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { HeaderFormatterPipe } from './header-formatter.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TramScheduleComponent,\n    HeaderFormatterPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTableModule,\n    MatCardModule,\n    MatSnackBarModule,\n  ],\n  exports: [\n    HeaderFormatterPipe\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TramService } from '../services/tram.service';\nimport { TRAM_STATIONS, TramStation } from 'src/assets/stations';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-tram-schedule',\n  templateUrl: './tram-schedule.component.html',\n  styleUrls: ['./tram-schedule.component.scss']\n})\nexport class TramScheduleComponent implements OnInit {\n  stations: TramStation[] = TRAM_STATIONS;\n  from: string = '';\n  to: string = '';\n  trams: any[] = [];\n  buses: any[] = [];\n  searched = false;\n  displayedColumns: string[] = [];\n\n  constructor(private tramService: TramService, private snackBar: MatSnackBar) {}\n\n  ngOnInit() {\n    this.displayedColumns = ['destination', 'scheduled', 'expected', 'state', 'display'];\n  }\n\n  searchTrams() {\n\n    if (!this.from || !this.to) {\n      this.showError(\"Please select both From and To stations.\");\n      return;\n    }\n    if (this.from === this.to) {\n      this.showError(\"From and To stations must be different.\");\n      return;\n    }\n\n    this.tramService.searchTrams(this.from, this.to).subscribe(result => {\n      console.log(result);\n      this.trams = result.trams;\n      this.buses = result.buses;\n      this.searched = true;\n\n      if (this.trams.length === 0 && this.buses.length === 0) {\n        this.showError(\"No trains or buses found.\");\n      }\n    });\n  }\n\n  showError(message: string) {\n    this.snackBar.open(message, \"Close\", {\n      duration: 3000,\n      panelClass: [\"error-snackbar\"]\n    });\n  }\n}\n","<div class=\"container\">\n    <mat-card>\n        <h2>Tram Search</h2>\n\n        <div class=\"form-group\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>From</mat-label>\n                <mat-select [(ngModel)]=\"from\">\n                    <mat-option *ngFor=\"let station of stations\" [value]=\"station.name\">\n                        {{ station.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>To</mat-label>\n                <mat-select [(ngModel)]=\"to\">\n                    <mat-option *ngFor=\"let station of stations\" [value]=\"station.name\">\n                        {{ station.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <button mat-raised-button color=\"primary\" (click)=\"searchTrams()\">Search</button>\n        </div>\n\n        <mat-card class=\"matCardInside\" *ngIf=\"trams.length > 0 || buses.length > 0\">\n            <h3 *ngIf=\"trams.length > 0\">Trams</h3>\n            <table mat-table [dataSource]=\"trams\" class=\"mat-elevation-z8 full-width-table\">\n\n                <ng-container *ngFor=\"let col of displayedColumns\" [matColumnDef]=\"col\">\n                    <th mat-header-cell *matHeaderCellDef>{{ col | headerFormatter }}</th>\n                    <td mat-cell *matCellDef=\"let tram\">\n                        <span *ngIf=\"col === 'scheduled' || col === 'expected'; else normalText\">\n                            {{ tram[col] | date:'yyyy-MM-dd HH:mm' }}\n                        </span>\n                        <ng-template #normalText>{{ tram[col] }}</ng-template>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n\n            <h3 *ngIf=\"buses.length > 0\">Buses</h3>\n            <table mat-table [dataSource]=\"buses\" class=\"mat-elevation-z8 full-width-table\">\n\n                <ng-container *ngFor=\"let col of displayedColumns\" [matColumnDef]=\"col\">\n                    <th mat-header-cell *matHeaderCellDef>{{ col | headerFormatter }}</th>\n                    <td mat-cell *matCellDef=\"let tram\">\n                        <span *ngIf=\"col === 'scheduled' || col === 'expected'; else normalText\">\n                            {{ tram[col] | date:'yyyy-MM-dd HH:mm' }}\n                        </span>\n                        <ng-template #normalText>{{ tram[col] }}</ng-template>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </mat-card>\n\n        <mat-card *ngIf=\"trams.length === 0 && buses.length === 0 && searched\">\n            <p class=\"error\">No trains or buses found.</p>\n        </mat-card>\n    </mat-card>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'headerFormatter'\n})\nexport class HeaderFormatterPipe implements PipeTransform {\n\n  transform(column: string): string {\n    const headers: { [key: string]: string } = {\n      'destination': 'Final Destination',\n      'scheduled': 'Scheduled Time',\n      'expected': 'Expected Time',\n      'state': 'State',\n      'display': 'Time'\n    };\n    return headers[column] || column;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TramScheduleComponent } from './tram-schedule/tram-schedule.component';\n\nconst routes: Routes = [\n  { path: '', component: TramScheduleComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}